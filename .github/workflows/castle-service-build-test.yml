name: Castle Service - Build & Test

on:
  push:
    branches: [main]
    paths:
      - 'examples/castle-service/**'
      - '.github/workflows/castle-service-build-test.yml'
  pull_request:
    branches: [main]
    paths:
      - 'examples/castle-service/**'
      - '.github/workflows/castle-service-build-test.yml'
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install published Entente packages in castle-service
        working-directory: examples/castle-service
        run: pnpm add @entente/types@latest @entente/provider@latest @entente/fixtures@latest

      - name: Install castle-service dependencies
        working-directory: examples/castle-service
        run: pnpm install

      - name: Install Entente CLI globally
        run: npm install -g @entente/cli@latest

      - name: Get version from package.json
        id: version
        run: |
          cd examples/castle-service
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using package.json version: $VERSION"

      - name: Check path changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            castle-service:
              - 'examples/castle-service/**'
              - '.github/workflows/castle-service-build-test.yml'

      - name: Build castle-service
        if: steps.changes.outputs.castle-service == 'true'
        env:
          ENTENTE_SERVICE_URL: ${{ vars.ENTENTE_SERVICE_URL }}
          ENTENTE_API_KEY: ${{ secrets.ENTENTE_API_KEY }}
        run: pnpm --filter @entente/example-castle-service build

      - name: Register service with Entente
        if: steps.changes.outputs.castle-service == 'true'
        env:
          ENTENTE_API_KEY: ${{ secrets.ENTENTE_API_KEY }}
        run: |
          cd examples/castle-service
          VERSION=$(node -p "require('./package.json').version")
          entente register-service \
            --type provider \
            --name castle-service \
            --spec spec/openapi.json \
            --spec-version $VERSION \
            --environment development

      - name: Run castle-service tests
        if: steps.changes.outputs.castle-service == 'true'
        env:
          ENTENTE_SERVICE_URL: ${{ vars.ENTENTE_SERVICE_URL }}
          ENTENTE_API_KEY: ${{ secrets.ENTENTE_API_KEY }}
        run: pnpm --filter @entente/example-castle-service test
