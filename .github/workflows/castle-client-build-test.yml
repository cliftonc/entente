name: Castle Client - Build & Test

on:
  push:
    branches: [main]
    paths:
      - 'examples/castle-client/**'
      - '.github/workflows/castle-client-build-test.yml'
  pull_request:
    branches: [main]
    paths:
      - 'examples/castle-client/**'
      - '.github/workflows/castle-client-build-test.yml'
  workflow_dispatch:
  workflow_call:
    outputs:
      should-deploy:
        description: 'Whether deployment should proceed'
        value: ${{ jobs.build-and-test.outputs.should-deploy }}
      version:
        description: 'Version from package.json'
        value: ${{ jobs.build-and-test.outputs.version }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      should-deploy: ${{ steps.changes.outputs.castle-client }}
      version: ${{ steps.version.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install published Entente packages in castle-client
        working-directory: examples/castle-client
        run: pnpm add @entente/types@^0.1.2 @entente/consumer@^0.1.2 @entente/fixtures@^0.1.2

      - name: Install castle-client dependencies
        working-directory: examples/castle-client
        run: pnpm install

      - name: Install Entente CLI globally
        run: npm install -g @entente/cli@latest

      - name: Get version from package.json
        id: version
        run: |
          cd examples/castle-client
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using package.json version: $VERSION"

      - name: Check path changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            castle-client:
              - 'examples/castle-client/**'
              - '.github/workflows/castle-client-build-test.yml'

      - name: Build castle-client
        if: steps.changes.outputs.castle-client == 'true'
        env:
          ENTENTE_SERVICE_URL: ${{ vars.ENTENTE_SERVICE_URL }}
          ENTENTE_API_KEY: ${{ secrets.ENTENTE_API_KEY }}
        run: pnpm --filter @entente/example-castle-client build

      - name: Register service with Entente
        if: steps.changes.outputs.castle-client == 'true'
        env:
          ENTENTE_API_KEY: ${{ secrets.ENTENTE_API_KEY }}
        run: |
          cd examples/castle-client
          entente register-service \
            --type consumer \
            --name castle-client \
            --environment development

      - name: Run castle-client tests
        if: steps.changes.outputs.castle-client == 'true'
        env:
          ENTENTE_SERVICE_URL: ${{ vars.ENTENTE_SERVICE_URL }}
          ENTENTE_API_KEY: ${{ secrets.ENTENTE_API_KEY }}
        run: pnpm --filter @entente/example-castle-client test